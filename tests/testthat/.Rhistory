getwd()
solution_v
X
Z
getwd()
setwd("../../")
getwd()
library(Rcpp)
library(RcppArmadillo)
library(devtools)
compileAttributes()
document()
sourceCpp("src/SynthCpp_functions.cpp")
sourceCpp("src/SynthCpp_functions.cpp")
unload()
compileAttributes()
load_all()
document()
test()
unload()
load_all()
data(solution_v_forc_example)
ls()
x
X
Z
unload()
ls()
as.numeric(solution.v)
solution.v
dim(H)
dim(c)
c
dim(X.scaled)
 V
solution.v
length(solution.v)
V
dim(X0.scaled)
dim(H)
dim(a)
a
crossprod(X1.scaled, V)
crossprod(X1.scaled, V) %*% X1.scaled)
crossprod(X1.scaled, V) %*% X1.scaled
library(Rcpp)
solution.w
solution_w_cpp(solution.v, X0.scaled, X1.scaled)
solution.v
class(solution.v)
solution_w_cpp(as.numeric(solution.v), X0.scaled, X1.scaled)
solution_w_cpp(as.matrix(solution.v), X0.scaled, X1.scaled)
solution_w_cpp(as.matrix(solution.v), X0.scaled, X1.scaled)
solution_w_cpp(as.matrix(solution.v), X0.scaled, X1.scaled)
solution_w_cpp(as.matrix(solution.v), X0.scaled, X1.scaled)
V
solution_w_cpp(as.matrix(solution.v), X0.scaled, X1.scaled)
solution_w_cpp(as.matrix(solution.v), X0.scaled, X1.scaled)
c
solution_w_cpp(as.matrix(solution.v), X0.scaled, X1.scaled)
c
dim(c)
solution_w_cpp(as.matrix(solution.v), X0.scaled, X1.scaled)
solution.w
solution_w_cpp(as.matrix(solution.v), X0.scaled, X1.scaled)
solution.w
solution_w_cpp(as.matrix(solution.v), X0.scaled, X1.scaled)
solution_w_cpp(as.matrix(solution.v), X0.scaled, X1.scaled)
c
A
solution_w_cpp(as.matrix(solution.v), X0.scaled, X1.scaled)
test <- solution_w_cpp(as.matrix(solution.v), X0.scaled, X1.scaled)
test
solution.w
